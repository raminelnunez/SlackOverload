@using SlackOverload.Models
@using System.Web
@using Microsoft.AspNetCore.Http
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@model Question

<link href="https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote.min.css" rel="stylesheet">

@{
    string[]? Tags = null;
    if ((string[])ViewData["QuestionTags"] != null)
    {
        Tags = (string[])ViewData["QuestionTags"];
    }
        
    var Comments = (List<Comment>)ViewData["Comments"];
    var CorrectAnswer = (Comment)ViewData["CorrectAnswer"];
    var IsOP = (bool)ViewData["OP"];
}
<h1>@Model.Title</h1>
<div class="post">
    <div class="post-user-info">
        <div class="user-info-username">@Model.UserName</div> 
        <div class="user-info-userreputation">Reputation: @Model.UserReputation</div> 
    </div>
    <div class="post-content">@Html.Raw(Model.Content)</div>
    <div class="post-score">
        <div class="post-score-vote">
            <form method="post" action="VoteQuestion">
                <input type="hidden" id="QuestionId" name="QuestionId" value=@Model.Id>
                <button id="VoteMade" name="VoteMade" type="submit" value="Upvote">Upvote</button>
                <button id="VoteMade" name="VoteMade" type="submit" value="Downvote">Downvote</button>
            </form>
        </div>
        <div class="post-score-display">Score: @Model.Score</div>
    </div>
</div>

@if (Tags != null)
{
<div class="tags">
<p>Tags:</p>
<form method="get" action="AllQuestions">
@foreach (string tag in Tags)
{
    @if (tag != "" && tag != ",")
            {
                <button id="Tag" name="Tag" type="submit" value=@tag>@tag</button>
            }
}
</form>
</div>
}

@if (IsOP)
{
    <form method="post" action="AddTag">
        <input type="hidden" id="QuestionId" name="QuestionId" value=@Model.Id>
        <input type="text" id="TagToAdd" name="TagToAdd">
        <input type="submit" value="Add Tag">
    </form>
}
<hr>
<p>Comments:</p>


@if (CorrectAnswer != null)
{
    <div class= "comment">
    <h4 style="color:green;">*Correct Answer</h4>
    <div class="post correct-answer">
        <div class="post-user-info">
            <div class="user-info-username">@CorrectAnswer.UserName</div> 
            <div class="user-info-userreputation">Reputation: @CorrectAnswer.UserReputation</div> 
        </div>
        <div class="post-content">@Html.Raw(CorrectAnswer.Content)</div>
        <div class="post-score">
            <div class="post-score-vote">
                <form method="post" action="VoteComment">
                    <input type="hidden" id="CommentId" name="CommentId" value=@CorrectAnswer.Id>
                    <input type="hidden" id="QuestionId" name="QuestionId" value=@Model.Id>
                    <button id="VoteMade" name="VoteMade" type="submit" value="Upvote">Upvote</button>
                    <button id="VoteMade" name="VoteMade" type="submit" value="Downvote">Downvote</button>
                </form>
            </div>
            <div class="post-score-display">Score: @CorrectAnswer.Score</div>
        </div>
    </div>
        <form class="form-reply" method="post" action="PostReply">
            <textarea class="richtextarea" id="Content" name="Content">
            </textarea>
            <input type="hidden" id="CommentId" name="CommentId" value=@CorrectAnswer.Id>
            <input type="hidden" id="QuestionId" name="QuestionId" value=@Model.Id>
            <input type="submit" value="Reply">
        </form>

        @if (IsOP) {
    <form method="post" action="MakeCorrectAnswer">
        <input type="hidden" id="CommentId" name="CommentId" value=@CorrectAnswer.Id>
        <input type="hidden" id="QuestionId" name="QuestionId" value=@Model.Id>
        <input type="submit" value="Unmark Correct Answer">
    </form>
    }

    <ul>
        @for (int i = 0; i < CorrectAnswer.ReplyCount; i++)
            {
                <li class="reply">
                 <div class="post">
        <div class="post-user-info">
            <div class="user-info-username">@ViewData[$"comment-{CorrectAnswer.Id}-reply-{i}-username"]</div> 
            <div class="user-info-userreputation">Reputation: @ViewData[$"comment-{CorrectAnswer.Id}-reply-{i}-userreputation"]</div> 
        </div>
        <div class="post-content">@Html.Raw(ViewData[$"comment-{CorrectAnswer.Id}-reply-{i}-content"])</div>
        <div class="post-score">
            <div class="post-score-vote">
                <form method="post" action="VoteReply">
                    <input type="hidden" id="QuestionId" name="QuestionId" value=@Model.Id>
                    <input type="hidden" id="ReplyId" name="ReplyId" value=@ViewData[$"comment-{CorrectAnswer.Id}-reply-{i}-id"]>
                    <button id="VoteMade" name="VoteMade" type="submit" value="Upvote">Upvote</button>
                    <button id="VoteMade" name="VoteMade" type="submit" value="Downvote">Downvote</button>
                </form>
            </div>
            <div class="post-score-display">Score: @ViewData[$"comment-{CorrectAnswer.Id}-reply-{i}-score"]</div>
        </div>
    </div>
                
                </li>
            }
        
        </ul>
    </div>
}





@if (Comments != null)
{
    @foreach (Comment comment in Comments)
    {
        if (CorrectAnswer == null)
        {

                <div class="comment">
    <div class="post">
        <div class="post-user-info">
            <div class="user-info-username">@comment.UserName</div> 
            <div class="user-info-userreputation">Reputation: @comment.UserReputation</div> 
        </div>
        <div class="post-content">@Html.Raw(comment.Content)</div>
        <div class="post-score">
            <div class="post-score-vote">
                <form method="post" action="VoteComment">
                    <input type="hidden" id="CommentId" name="CommentId" value=@comment.Id>
                    <input type="hidden" id="QuestionId" name="QuestionId" value=@Model.Id>
                    <button id="VoteMade" name="VoteMade" type="submit" value="Upvote">Upvote</button>
                    <button id="VoteMade" name="VoteMade" type="submit" value="Downvote">Downvote</button>
                </form>
            </div>
            <div class="post-score-display">Score: @comment.Score</div>
        </div>
    </div>
        <form class="form-reply" method="post" action="PostReply">
            <textarea class="richtextarea" id="Content" name="Content">
            </textarea>
            <input type="hidden" id="CommentId" name="CommentId" value=@comment.Id>
            <input type="hidden" id="QuestionId" name="QuestionId" value=@Model.Id>
            <input type="submit" value="Reply">
        </form>

        @if (IsOP)
        {
            <form method="post" action="MakeCorrectAnswer">
                <input type="hidden" id="CommentId" name="CommentId" value=@comment.Id>
                <input type="hidden" id="QuestionId" name="QuestionId" value=@Model.Id>
                <input type="submit" value="Mark As Correct Answer">
            </form>
        }
        <ul>
        @for (int i = 0; i < comment.ReplyCount; i++)
            {
                <li class="reply">
                 <div class="post">
        <div class="post-user-info">
            <div class="user-info-username">@ViewData[$"comment-{comment.Id}-reply-{i}-username"]</div> 
            <div class="user-info-userreputation">Reputation: @ViewData[$"comment-{comment.Id}-reply-{i}-userreputation"]</div> 
        </div>
        <div class="post-content">@Html.Raw(ViewData[$"comment-{comment.Id}-reply-{i}-content"])</div>
        <div class="post-score">
            <div class="post-score-vote">
                <form method="post" action="VoteReply">
                    <input type="hidden" id="QuestionId" name="QuestionId" value=@Model.Id>
                    <input type="hidden" id="ReplyId" name="ReplyId" value=@ViewData[$"comment-{comment.Id}-reply-{i}-id"]>
                    <button id="VoteMade" name="VoteMade" type="submit" value="Upvote">Upvote</button>
                    <button id="VoteMade" name="VoteMade" type="submit" value="Downvote">Downvote</button>
                </form>
            </div>
            <div class="post-score-display">Score: @ViewData[$"comment-{comment.Id}-reply-{i}-score"]</div>
        </div>
    </div>
                
                </li>
            }
        
        </ul>
            </div>
        }
        else if (comment.Id != CorrectAnswer.Id)
        {
         
            <div class="comment">
    <div class="post">
        <div class="post-user-info">
            <div class="user-info-username">@comment.UserName</div> 
            <div class="user-info-userreputation">Reputation: @comment.UserReputation</div> 
        </div>
        <div class="post-content">@Html.Raw(comment.Content)</div>
        <div class="post-score">
            <div class="post-score-vote">
                <form method="post" action="VoteComment">
                    <input type="hidden" id="CommentId" name="CommentId" value=@comment.Id>
                    <input type="hidden" id="QuestionId" name="QuestionId" value=@Model.Id>
                    <button id="VoteMade" name="VoteMade" type="submit" value="Upvote">Upvote</button>
                    <button id="VoteMade" name="VoteMade" type="submit" value="Downvote">Downvote</button>
                </form>
            </div>
            <div class="post-score-display">Score: @comment.Score</div>
        </div>
    </div>
        <form class="form-reply" method="post" action="PostReply">
            <textarea class="richtextarea" id="Content" name="Content">
            </textarea>
            <input type="hidden" id="CommentId" name="CommentId" value=@comment.Id>
            <input type="hidden" id="QuestionId" name="QuestionId" value=@Model.Id>
            <input type="submit" value="Reply">
        </form>

        @if (IsOP)
        {
            <form method="post" action="MakeCorrectAnswer">
                <input type="hidden" id="CommentId" name="CommentId" value=@comment.Id>
                <input type="hidden" id="QuestionId" name="QuestionId" value=@Model.Id>
                <input type="submit" value="Mark As Correct Answer">
            </form>
        }
        <ul>
        @for (int i = 0; i < comment.ReplyCount; i++)
            {
                <li class="reply">
                 <div class="post">
        <div class="post-user-info">
            <div class="user-info-username">@ViewData[$"comment-{comment.Id}-reply-{i}-username"]</div> 
            <div class="user-info-userreputation">Reputation: @ViewData[$"comment-{comment.Id}-reply-{i}-userreputation"]</div> 
        </div>
        <div class="post-content">@Html.Raw(ViewData[$"comment-{comment.Id}-reply-{i}-content"])</div>
        <div class="post-score">
            <div class="post-score-vote">
                <form method="post" action="VoteReply">
                    <input type="hidden" id="QuestionId" name="QuestionId" value=@Model.Id>
                    <input type="hidden" id="ReplyId" name="ReplyId" value=@ViewData[$"comment-{comment.Id}-reply-{i}-id"]>
                    <button id="VoteMade" name="VoteMade" type="submit" value="Upvote">Upvote</button>
                    <button id="VoteMade" name="VoteMade" type="submit" value="Downvote">Downvote</button>
                </form>
            </div>
            <div class="post-score-display">Score: @ViewData[$"comment-{comment.Id}-reply-{i}-score"]</div>
        </div>
    </div>
                
                </li>
            }
        
        </ul>
            </div>
        }
    }
}

<form class="form-postcomment" method="post" action="PostComment">
    <textarea class="richtextarea" id="Content" name="Content">
    </textarea>
    <input type="hidden" id="QuestionId" name="QuestionId" value=@Model.Id>
    <input type="submit" value="Post Comment">
</form>
<br><br>


@section Scripts {
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote.min.js"></script>

    <script>$(document).ready(function() {
  $('.richtextarea').summernote();
});</script>
}